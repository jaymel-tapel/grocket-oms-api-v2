// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RoleEnum {
  ADMIN
  ACCOUNTANT
  SELLER
}

enum StatusEnum {
  ACTIVE
  DELETED
  BLOCKED
}

enum LanguageEnum {
  GERMAN
  ENGLISH
}

enum TierEnum {
  FREE
  PREMIUM
  VIP
}

model User {
  id              Int              @id @default(autoincrement())
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  deletedAt       DateTime?
  name            String
  email           String
  password        String
  role            RoleEnum
  profile_image   String?
  contact_url     String?
  phone           String?
  status          StatusEnum       @default(ACTIVE)
  alternateEmails AlternateEmail[]
  clients         Client[]
}

model AlternateEmail {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  email     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Client {
  id                   Int         @id @default(autoincrement())
  name                 String
  email                String
  password             String
  forgot_password_code String?
  seller               User        @relation(fields: [sellerId], references: [id])
  sellerId             Int
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt
  deletedAt            DateTime?
  clientInfo           ClientInfo?
}

model ClientInfo {
  id                Int           @id @default(autoincrement())
  clientId          Int           @unique
  client            Client        @relation(fields: [clientId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  sourceId          Int
  source            ClientSource  @relation(fields: [sourceId], references: [id])
  phone             String?
  sentOffer         Boolean?      @default(false)
  hasLoggedIn       Boolean?      @default(false)
  thirdPartyId      String?
  default_unit_cost Decimal?      @default(0.00) @db.Decimal(65, 2)
  status            StatusEnum?   @default(ACTIVE)
  language          LanguageEnum? @default(GERMAN)
  tier              TierEnum?     @default(FREE)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  deletedAt         DateTime?
}

model ClientSource {
  id         Int          @id @default(autoincrement())
  name       String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  clientInfo ClientInfo[]
}
